@import "include/backend";
@import "include/checkbox";

// Header
body > header {

  > ul.tabBar {
    $tabHeight: 34px;

    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding-top: #{$headerHeight - $tabHeight};
    overflow: hidden;
    text-align: center;

    > li {
      position: relative;
      display: inline-block;
      margin: 0 20px;
      height: $tabHeight;

      > a {
        position: relative;
        display: block;
        color: $textColorInverted;
        opacity: 0.7;
        padding: 10px 0 0 0;
        height: 100%;
        z-index: 2;
      }

      &.active {
        background: $bodyBackground;
        filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.5));

        &::before, &::after {
          content: '';
          display: block;
          position: absolute;
          top: 0;
          width: 70%;
          height: 100%;
          background-color: inherit;
        }

        &::before {
          left: -20px;
          border-width: 2px 0 2px 2px;
          border-radius: 8px 0 0 0;
          transform: skewX(-30deg);
        }

        &::after {
          right: -20px;
          border-width: 2px 2px 2px 0;
          border-radius: 0 8px 0 0;
          transform: skewX(30deg);
        }

        > a {
          color: $mainColor;
          opacity: 1;
          cursor: default;

          &::before, &::after {
            content: '';
            display: block;
            position: absolute;
            bottom: -4px;
            width: 10px;
            height: 30px;
            border-radius: 50%;
            border-right: 15px solid transparent;
            box-shadow: 10px 0px $bodyBackground;
          }

          &::before {
            left: -40px;
            transform: rotateZ(45deg);
          }

          &::after {
            right: -40px;
            transform: rotateZ(135deg);
          }
        }
      }

      &[data-name='help'] {
        position: absolute;
        top: 13px;
        right: 30px;
        margin: 0;
        height: 42px;
        width: 42px;
        border-radius: 50%;
        transition: background 0.5s;

        &::before, &::after {
          display: none;
        }

        > a {
          padding: 4px 0 0 0;
          font-size: 200%;
          font-weight: 200;
          z-index: 0;

          &::before, &::after {
            display: none;
          }
        }

        &:hover {
          background: rgba(255, 255, 255, 0.1);
        }

        &.active {
          background: rgba(255, 255, 255, 0.2);
          filter: none;

          > a {
            color: $textColorInverted;
            opacity: 0.8;
          }
        }
      }
    }
  }

}

// Content
section#content {
  position: relative;
  width: 100%;
  margin-top: $headerHeight;
  height: calc(100vh - #{$headerHeight});
  padding: 40px 0 25px;

  > div.tab {

    &.hidden {
      display: none;
    }

    ul.labels {

      ~ div[data-name] {

        &.hidden {
          display: none;
        }
      }
    }

    &[data-name='contribute'] {

      p {
        font-size: 120%;
        line-height: 170%;
        margin: 0 0 10px 0;

        > span {
          font-weight: 500;
        }
      }

      ul.labels {
        display: flex;
        justify-content: space-around;

        > li {
          position: relative;
          display: block;
          width: 100%;
          height: 150px;
          text-align: center;

          &.active {

            &::after {
              content: "";
              position: absolute;
              bottom: -12px;
              left: calc(50% - 12px);
              width: 24px;
              height: 24px;
              background: $contentBackground;
              border-top: 1px solid rgba(0, 0, 0, 0.1);
              border-left: 1px solid rgba(0, 0, 0, 0.1);
              transform: rotateZ(45deg);
            }
          }

          > a {
            @include mask(null, $textColorLight, 64px);
            display: block;
            width: 100%;
            height: 100%;
            padding-top: 100px;
            font-size: 150%;
            transition: background 0.5s, color 0.5s;

            &::before {
              -webkit-mask-position-y: 15px;
              transition: background 0.5s;
            }

            &:hover {
              background: $bodyBackground;
              color: $mainColor;

              &::before {
                background: $mainColor;
              }
            }
          }

          &[data-type='shareUserdata'] > a::before {
            @include maskImage('settings/icon-shareUserdata');
          }

          &[data-type='translation'] > a::before {
            @include maskImage('settings/icon-translate');
          }

          &[data-type='donation'] > a::before {
            @include maskImage('settings/icon-donate');
          }
        }

        ~ div[data-name] {
          border-top: 1px solid rgba(0, 0, 0, 0.1);
          padding-top: 30px;
        }
      }

      a.action {
        display: inline-block;
        background: $gradient;
        color: $textColorInverted;
        margin: 30px 0 0 0;
        padding: 5px 10px;
        font-size: 110%;
      }
    }

    &[data-name='feedback'] {

      div.faq {
        margin: -10px 0 40px 0;

        strong {
          display: block;
          font-size: 120%;
          font-weight: 400;
          cursor: pointer;
          margin: 10px 0;
        }

        > p {
          position: relative;
          background: $bodyBackground;
          line-height: 150%;
          padding: 5px 7px;
          margin: 0 0 15px 0;
          border-radius: 5px;
          display: none;

          &.visible {
            display: block;
          }

          &::before {
            content: "";
            position: absolute;
            top: -14px;
            left: 10px;
            border: 7px solid transparent;
            border-bottom-color: $bodyBackground;
          }
        }
      }
    }

    &[data-name='help'] {

      a {
        display: inline-block;
        background: $gradient;
        color: $textColorInverted;
        padding: 5px 10px;
        font-size: 110%;
        margin-bottom: 50px;
      }
    }
  }

  p.desc {
    font-size: 120%;
    line-height: 170%;
    margin: 10px 0 20px 0;
  }
}

// Appearance
iframe[data-appearance] {
  display: none;
}

%bg1 {
  background-image: linear-gradient(rgba(0, 0, 0, 0.1) 2px, transparent 2px),
  linear-gradient(90deg, rgba(0, 0, 0, 0.1) 2px, transparent 2px),
  linear-gradient(rgba(0, 0, 0, 0.05) 1px, transparent 1px),
  linear-gradient(90deg, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
  background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;
  background-position: -2px -2px, -2px -2px, -1px -1px, -1px -1px;
}

%bg2 {
  background: $bodyBackground;
}

%bg3 {
  background-color: #556;
  background-image: linear-gradient(30deg, #445 12%, transparent 12.5%, transparent 87%, #445 87.5%, #445),
  linear-gradient(150deg, #445 12%, transparent 12.5%, transparent 87%, #445 87.5%, #445),
  linear-gradient(30deg, #445 12%, transparent 12.5%, transparent 87%, #445 87.5%, #445),
  linear-gradient(150deg, #445 12%, transparent 12.5%, transparent 87%, #445 87.5%, #445),
  linear-gradient(60deg, #99a 25%, transparent 25.5%, transparent 75%, #99a 75%, #99a),
  linear-gradient(60deg, #99a 25%, transparent 25.5%, transparent 75%, #99a 75%, #99a);
  background-size: 80px 140px;
  background-position: 0 0, 0 0, 40px 70px, 40px 70px, 0 0, 40px 70px;
}

body[data-tab='appearance'] {

  @for $i from 1 through 3 {
    &[data-bg='#{$i}'] {
      @extend %bg#{$i};
    }
  }

  iframe[data-appearance] {
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - 320px);
    height: 100%;
    display: block;
    border: none;

    &.hidden {
      display: none;
    }
  }

  section#content {
    padding: 0;

    > div.tab {
      position: absolute;
      top: 0;
      right: 0;
      width: 320px;

      > header {

        > button {
          float: left;
        }
      }

      > div {
        padding-right: 0;
      }

      menu.backgroundChanger {
        position: absolute;
        bottom: 20px;
        left: -500px;
        width: 500px;
        text-align: right;
        padding: 0 20px;

        > a {
          display: inline-block;
          margin: 0 5px;
          width: 70px;
          height: 40px;
          background: $bodyBackground;
          box-shadow: 1px 1px 7px rgba(0, 0, 0, 0.3);

          @for $i from 1 through 3 {
            &[data-bg='#{$i}'] {
              @extend %bg#{$i};
            }
          }

          &.active {
            border: 2px solid $mainColorAlt;
          }
        }
      }

      ul.labels {
        padding: 7px 0 10px 0;

        > li {
          display: inline-block;
          margin: 0 4px 0 0;

          > a {
            display: block;
            padding: 2px 7px;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            font-size: 90%;
            transition: color 0.3s, background 0.3s;

            &:hover {
              background: rgba(0, 0, 0, 0.2);
            }
          }

          &.active > a {
            color: $textColorInverted;
            background: $mainColor;
          }
        }

        ~ div[data-name] {

          label {
            margin: 20px 0 0 0;
          }

          input[type='range'] {
            max-width: 200px;
          }

          a.revert {
            @include mask('icon-update', $textColorLight, 24px);
            position: relative;
            vertical-align: top;
            display: inline-block;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            margin: 9px 0 0 8px;
            transform: rotateY(180deg);
          }

          input[type='range'] + span + a.revert {
            margin-top: 4px;
          }
        }
      }
    }
  }

  &[data-pos='right'] {

    iframe[data-appearance] {
      left: auto;
      right: 0;
    }

    section#content {

      > div.tab {
        right: auto;
        left: 0;

        menu.backgroundChanger {
          left: auto;
          right: -500px;
          text-align: left;
        }
      }
    }
  }
}

// Form
label {
  display: block;
  font-weight: 500;
  margin: 10px 0;
}

div.checkbox {
  margin: 10px 0 10px 1px;
}

select, input[type='email'], input[type='text'], textarea {
  border: 1px solid rgba(0, 0, 0, 0.2);
  outline: 0;
  height: 28px;
  padding: 0 5px;
  margin: 7px 0 10px;
  background: rgba(0, 0, 0, 0.02);
  transition: border-color 0.5s, box-shadow 0.5s;

  &.error {
    border-color: $colorError;
    box-shadow: 0 0 10px $colorError;
  }
}

select {
  cursor: pointer;
}

textarea {
  display: block;
  width: 100%;
  height: 300px;
  padding: 5px;
}

input.color {
  display: inline-block;
  width: 32px;
  height: 32px;
  vertical-align: top;
  cursor: pointer;
  opacity: 0;

  + span {
    position: relative;
    display: inline-block;
    vertical-align: top;
    width: 32px;
    height: 32px;
    margin: 7px 0 10px -32px;
    border-radius: 50%;
    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.1);
    pointer-events: none;

    &::before, &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
    }

    &::before {
      background-image: img('settings/alpha.webp');
    }

    &::after {
      background-color: inherit;
    }
  }
}

input[type='range'] {
  display: inline-block;
  vertical-align: top;
  -webkit-appearance: none;
  width: 100%;
  max-width: 250px;
  height: 20px;
  background: linear-gradient(to right, $mainColor 0%, $mainColor 100%) no-repeat;
  background-size: 0 3px;
  background-position: 0 9px;
  margin: 7px 0 10px;
  cursor: pointer;

  &:focus {
    outline: 0;
  }

  &::-webkit-slider-runnable-track {
    position: relative;
    background: rgba(0, 0, 0, 0.2);
    cursor: pointer;
    height: 3px;
    width: 100%;
    outline: 0;
    z-index: -1;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    background: $mainColor;
    border-radius: 50%;
    cursor: pointer;
    height: 12px;
    width: 12px;
    margin-top: -4px;
  }

  + span {
    position: relative;
    display: inline-block;
    background: rgba(0, 0, 0, 0.1);
    color: $textColor;
    font-size: 70%;
    padding: 2px 5px 3px;
    margin: 9px 0 0 6px;
    text-align: center;
    min-width: 20px;

    &::before {
      content: "";
      position: absolute;
      top: calc(50% - 4px);
      left: -8px;
      border: 4px solid transparent;
      border-right-color: rgba(0, 0, 0, 0.1);
    }
  }
}

div.configEntry {
  margin-bottom: 30px;
  transition: transform 0.5s, opacity 0.5s;

  &.hidden {
    position: absolute;
    transform: translate3d(-50px, 0, 0);
    opacity: 0;
    pointer-events: none;
    transition: none;
  }

  div.sub {

    label {
      display: inline-block;
      vertical-align: top;
      font-weight: 300;
      min-width: 80px;
    }

  }

  p {
    font-size: 90%;
    color: $textColorLight;
    margin-top: 7px;
    line-height: 150%;
    font-style: italic;

    &.shortcutInfo {

      > a {
        color: $mainColorAlt;
        font-weight: 400;
      }

      > em {
        color: $textColor;
      }
    }
  }
}

// Footer
body > footer {
  position: fixed;
  right: 0;
  bottom: 0;
  padding: 10px 20px;
  font-size: 90%;

  > a#copyright {

    > strong {
      transition: color 0.5s;
    }

    &:hover {

      > strong {
        color: $mainColorAlt;
      }
    }
  }
}

//
body {

  &::before, &::after {
    position: fixed;
    @extend %hidden;
  }

  &::after {
    content: attr(data-successtext);
    top: 50px;
    left: calc(50% - 300px);
    width: 600px;
    padding: 40px;
    text-align: center;
    font-size: 140%;
    color: $textColorInverted;
    background: $colorSuccess;
    transform: translate3d(0, -50px, 0);
    transition: opacity 0.5s, transform 0.5s;
    z-index: 99;
  }

  &::before {
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.8);
    transition: opacity 0.3s;
    z-index: 98;
  }

  &.success {

    &::before, &::after {
      @extend %visible;
    }

    &::after {
      transform: translate3d(0, 0, 0);
    }
  }

  &.loading {

    &::before {
      @extend %visible;
    }

    > svg.loading {
      position: fixed;
      top: calc(50% - 18px);
      left: calc(50% - 18px);
      z-index: 99;
    }
  }
}